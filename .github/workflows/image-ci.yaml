name: image-ci

on:
  push:
    branches:
      - "master"
    tags:
      - "[0-9]*.[0-9]*.[0-9]*"
    paths:
      # Only rebuild images when applications change
      - "components/**/*"
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Custom image tag (optional, will auto-generate if not provided)'
        required: false
        type: string
      component:
        description: 'Component to build'
        required: false
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'backend'
          - 'frontend'

jobs:
  generate-image-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      image_tag: ${{ steps.generate-image-tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Necessary to get all tags for IMAGE_TAG generation with git describe
          fetch-depth: 0

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Generate Image Tag
        id: generate-image-tag
        working-directory: cicd/github-actions
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.image_tag }}" ]]; then
            image_tag="${{ github.event.inputs.image_tag }}"
          else
            image_tag=$(task generate-version-tag)
          fi
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT

  build-tag-push:
    runs-on: ubuntu-latest
    needs: generate-image-tag
    strategy:
      matrix:
        path:
          - components/backend
          - components/frontend
    
    # Skip components based on manual trigger input
    if: ${{ 
      github.event_name != 'workflow_dispatch' || 
      github.event.inputs.component == 'all' ||
      (github.event.inputs.component == 'backend' && matrix.path == 'components/backend') ||
      (github.event.inputs.component == 'frontend' && matrix.path == 'components/frontend')
    }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Image
        env:
          IMAGE_TAG: ${{ needs.generate-image-tag.outputs.image_tag }}
        working-directory: ${{ matrix.path }}
        run: |
          task build-container-image-multi-arch IMAGE_TAG=${IMAGE_TAG}

  update-tags:
    runs-on: ubuntu-latest
    needs: [generate-image-tag, build-tag-push]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x

      - name: Update Image Tags
        working-directory: cicd/github-actions
        env:
          IMAGE_TAG: ${{ needs.generate-image-tag.outputs.image_tag }}
        run: |
          # Update staging tags for push to master or release tag
          # task update-staging-image-tags NEW_TAG=${IMAGE_TAG}            

          # Update production tags only for release tags
          if [[ $GITHUB_REF == refs/tags/*.*.* ]]; then
            task update-production-image-tags NEW_TAG=${IMAGE_TAG}
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          base: master
          token: ${{ secrets.MICROADVENTURES_GHA_PAT }}
          title: "Update image tags to (${{ needs.generate-image-tag.outputs.image_tag }})"