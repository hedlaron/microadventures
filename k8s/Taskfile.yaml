version: "3"

env:
  # Set default gum style options
  BORDER: double
  BORDER_FOREGROUND: "212"
  PADDING: "1 1"
  MARGIN: "1 1"

includes:
  common:
    taskfile: ./common/Taskfile.yaml
    dir: ./common
  postgresql:
    taskfile: ./postgresql/Taskfile.yaml
    dir: ./postgresql
  trivy-operator:
    taskfile: ./trivy-operator/Taskfile.yaml
    dir: ./trivy-operator

tasks:
  backend:apply:
    desc: "Apply kubernetes resource manifests for backend application"
    cmds:
      - "kubectl apply -f ./backend"

  frontend:apply:
    desc: "Apply kubernetes resource manifests for frontend application"
    cmds:
      - "kubectl apply -f ./frontend"

  backend:create-image-pull-secret:
    desc: "Create image pull secret to pull from private registry"
    cmds:
      - |
        if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_EMAIL" ] || [ -z "$DOCKER_PASSWORD" ]; then
          echo "Environment variables DOCKER_USERNAME, DOCKER_EMAIL, and DOCKER_PASSWORD are required."
          echo "Usage: DOCKER_USERNAME=your_username DOCKER_EMAIL=your_email DOCKER_PASSWORD=your_password task backend:create-image-pull-secret"
          exit 1
        fi
      - |
        kubectl create secret -n microadventures docker-registry dockerconfigjson \
          --docker-email=${DOCKER_EMAIL} \
          --docker-username=${DOCKER_USERNAME} \
          --docker-password=${DOCKER_PASSWORD} \
          --docker-server=https://index.docker.io/v1/

  backend:restart-backend:
    desc: "Restart backend deployment to pick up new configuration"
    cmds:
      - "kubectl rollout restart deployment backend -n microadventures"
      - "kubectl rollout status deployment backend -n microadventures"

  backend:logs-backend:
    desc: "View logs from the backend deployment"
    cmds:
      - "kubectl logs -l app=backend -n microadventures --tail=50"

  backend:status-backend:
    desc: "Check backend status"
    cmds:
      - "kubectl get pods -l app=backend -n microadventures"
      - "kubectl get svc backend -n microadventures"

  backend:port-forward-backend:
    desc: "Port forward backend to localhost:8000"
    cmds:
      - "kubectl port-forward service/backend 8000:8000 -n microadventures"

  apply-all:
    desc: "Apply kubernetes resource manifests for all applications"
    cmds:
      - task: common:apply-namespace
      - task: postgresql:install-postgres
      - task: postgresql:apply-initial-db-migration-job
      - task: common:deploy-traefik
      - task: common:apply-traefik-middleware
      - task: backend:apply
      - task: frontend:apply
      - |
        gum style "$(cat <<EOF
        ðŸš¨  Using kubectl - The pods will be in ImagePullBackOff state because of the private repository
        ðŸš¨  DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_EMAIL=\$DOCKER_EMAIL DOCKER_PASSWORD=\$DOCKER_PASSWORD task backend:create-image-pull-secret
        EOF
        )"

  apply-all-tilt:
    desc: "Apply kubernetes resource manifests for all applications using Tilt with kind"
    cmds:
      - kubectx kind-kind
      - task: common:apply-namespace
      - task: postgresql:install-postgres
      - task: postgresql:apply-initial-db-migration-job
      - task: postgresql:reapply-db-migration-job
      - task: common:deploy-traefik
      - task: common:apply-traefik-middleware
      - task: backend:apply
      - task: frontend:apply
      - |
        gum style "$(cat <<EOF
        ðŸš¨  Using Tilt - The pods will be in ImagePullBackOff state because of the private repository
        ðŸš¨  It's not necessary with Tilt as we will build the images locally 
        ðŸš¨  but if needed run:
        ðŸš¨  DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_EMAIL=\$DOCKER_EMAIL DOCKER_PASSWORD=\$DOCKER_PASSWORD task backend:create-image-pull-secret
        EOF
        )"
      - sudo cloud-provider-kind