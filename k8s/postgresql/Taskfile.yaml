version: '3'

# PostgreSQL deployment using GCP Secret Manager
# Prerequisites: 
# 1. GCP secrets must be deployed first: task -d ../secrets-gcp deploy
# 2. External Secrets Operator must be installed and configured

tasks:
  check-prerequisites:
    desc: "Check if all prerequisites are met for GCP-enabled PostgreSQL deployment"
    cmds:
      - echo "Checking prerequisites for PostgreSQL deployment with GCP secrets..."
      - echo "1. Checking if External Secrets Operator is installed..."
      - kubectl get deployment external-secrets -n external-secrets
      - echo "2. Checking if GCP ClusterSecretStore is configured..."
      - kubectl get clustersecretstore gcp-store
      - echo "3. Checking if microadventures-gcp-secrets exists..."
      - kubectl get secret microadventures-gcp-secrets -n microadventures
      - echo "All prerequisites are met!"

  ensure-gcp-secrets:
    desc: "Ensure GCP secrets are deployed and available"
    cmds:
      - echo "Checking if GCP secrets are available..."
      - kubectl get secret microadventures-gcp-secrets -n microadventures
      - echo "GCP secrets are available!"

  install-postgres:
    desc: "Deploy PostgreSQL using Helm with values from GCP secrets"
    deps: [ensure-gcp-secrets]
    cmds:
      - helm repo add bitnami https://charts.bitnami.com/bitnami
      - echo "Extracting PostgreSQL credentials from GCP secrets..."
      - |
        POSTGRES_USER=$(kubectl get secret microadventures-gcp-secrets -n microadventures -o jsonpath='{.data.POSTGRES_USER}' | base64 -d)
        POSTGRES_PASSWORD=$(kubectl get secret microadventures-gcp-secrets -n microadventures -o jsonpath='{.data.POSTGRES_PASSWORD}' | base64 -d)
        echo "Installing PostgreSQL with user: $POSTGRES_USER"
        helm upgrade --install \
          -n postgres \
          postgres bitnami/postgresql \
          --set auth.postgresPassword="$POSTGRES_PASSWORD" \
          --set auth.username="$POSTGRES_USER" \
          --set auth.password="$POSTGRES_PASSWORD" \
          --set auth.database=microadventures \
          --version 15.3.2 \
          --values values.yaml \
          --create-namespace

  apply-initial-db-migration-job:
    desc: "Run init.sql script against the DB using GCP secrets"
    deps: [ensure-gcp-secrets]
    cmds:
      - echo "Applying database migration job with GCP secrets..."
      - kubectl delete job db-migrator -n microadventures --ignore-not-found=true
      - kubectl apply -f ConfigMap.postgresql.yaml
      - kubectl apply -f Job.db-migrator.yaml
      - echo "Migration job applied. The job uses microadventures-gcp-secrets for database credentials."

  reapply-db-migration-job:
    desc: "Delete and reapply the database migration job"
    deps: [ensure-gcp-secrets]
    cmds:
      - kubectl delete job db-migrator -n microadventures --ignore-not-found=true
      - kubectl apply -f Job.db-migrator.yaml

  reinstall-postgres:
    desc: "Completely reinstall PostgreSQL using GCP secrets (WARNING - This will delete all data)"
    deps: [ensure-gcp-secrets]
    cmds:
      - echo "WARNING - This will delete all PostgreSQL data!"
      - helm uninstall postgres -n postgres --ignore-not-found
      - kubectl delete pvc --all -n postgres --ignore-not-found
      - task: install-postgres

  setup-complete:
    desc: "Complete setup: Install PostgreSQL and run initial migration"
    cmds:
      - task: install-postgres
      - echo "Waiting for PostgreSQL to be ready..."
      - kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=postgresql -n postgres --timeout=300s
      - task: apply-initial-db-migration-job
      - echo "PostgreSQL setup complete with GCP secrets!"

  verify-gcp-integration:
    desc: "Verify that PostgreSQL is using GCP secrets correctly"
    deps: [ensure-gcp-secrets]
    cmds:
      - echo "Checking GCP secrets availability..."
      - kubectl get secret microadventures-gcp-secrets -n microadventures
      - echo "PostgreSQL credentials from GCP:"
      - |
        echo "Username: $(kubectl get secret microadventures-gcp-secrets -n microadventures -o jsonpath='{.data.POSTGRES_USER}' | base64 -d)"
        echo "Password: [REDACTED]"
      - echo "Database URL from GCP:"
      - kubectl get secret microadventures-gcp-secrets -n microadventures -o jsonpath='{.data.DATABASE_URL}' | base64 -d && echo

  logs-migration-job:
    desc: "View logs from the database migration job"
    cmds:
      - kubectl logs job/db-migrator -n microadventures

  status-postgres:
    desc: "Check PostgreSQL status"
    cmds:
      - kubectl get pods -n postgres
      - kubectl get pvc -n postgres
      - kubectl get svc -n postgres
