apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: microadventures
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: hedlaron/microadventures-backend:foobarbaz
          imagePullPolicy: Always
          env:
            - name: PORT
              value: "8000"
            # PostgreSQL connection (from secrets)
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: POSTGRES_USER
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRESQL_SERVER
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: POSTGRES_HOST
            - name: POSTGRESQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: POSTGRES_PORT
            - name: POSTGRESQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: POSTGRES_DB
            # Application config (from configmap)
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: DOMAIN
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: ENVIRONMENT
            - name: BACKEND_CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: postgresql-config
                  key: BACKEND_CORS_ORIGINS
            # Secrets (from secrets)
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: SECRET_KEY
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: postgresql-secrets
                  key: OPENAI_API_KEY
          ports:
            - containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
          resources:
            limits:
              memory: "512Mi"
            requests:
              memory: "256Mi"
              cpu: "100m"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
      imagePullSecrets:
        - name: dockerconfigjson
      securityContext:
        seccompProfile:
          type: RuntimeDefault