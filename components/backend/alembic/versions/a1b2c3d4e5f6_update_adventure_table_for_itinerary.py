"""update adventure table for itinerary support

Revision ID: a1b2c3d4e5f6
Revises: f1a2b3c4d5e6
Create Date: 2025-06-26 17:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, None] = 'f1a2b3c4d5e6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add new columns for enhanced adventure features
    op.add_column('adventures', sa.Column('itinerary', sa.JSON(), nullable=True))
    op.add_column('adventures', sa.Column('route', sa.JSON(), nullable=True))
    op.add_column('adventures', sa.Column('weather_forecast', sa.JSON(), nullable=True))
    op.add_column('adventures', sa.Column('packing_list', sa.JSON(), nullable=True))
    op.add_column('adventures', sa.Column('best_season', sa.String(length=50), nullable=True))
    op.add_column('adventures', sa.Column('accessibility', sa.String(length=100), nullable=True))
    
    # Update existing records with default values
    op.execute("""
        UPDATE adventures SET 
            itinerary = '[]',
            route = '{"start_coordinates": "0,0", "end_coordinates": "0,0", "waypoints": [], "map_embed_url": "", "estimated_distance": "", "estimated_travel_time": ""}',
            weather_forecast = '{"temperature": "", "conditions": "", "precipitation": "", "wind": "", "uv_index": "", "best_time_outdoors": ""}',
            packing_list = '{"essential": [], "weather_specific": [], "optional": [], "food_and_drink": []}',
            best_season = 'year-round',
            accessibility = 'Moderate walking required'
        WHERE itinerary IS NULL
    """)
    
    # Make the new columns non-nullable after updating existing records
    op.alter_column('adventures', 'itinerary', nullable=False)
    op.alter_column('adventures', 'route', nullable=False)
    op.alter_column('adventures', 'weather_forecast', nullable=False)
    op.alter_column('adventures', 'packing_list', nullable=False)
    
    # Remove old column if it exists
    try:
        op.drop_column('adventures', 'best_time')
    except:
        pass  # Column might not exist
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('adventures', sa.Column('best_time', sa.String(length=100), nullable=True))
    op.drop_column('adventures', 'accessibility')
    op.drop_column('adventures', 'best_season')
    op.drop_column('adventures', 'packing_list')
    op.drop_column('adventures', 'weather_forecast')
    op.drop_column('adventures', 'route')
    op.drop_column('adventures', 'itinerary')
    # ### end Alembic commands ###
