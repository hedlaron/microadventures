version: "3"

tasks:
  # TODO add stage

  get-webui-password:
    desc: "Get password for kluctl web ui admin user"
    cmds:
      - kubectl -n kluctl-system get secret webui-secret -o jsonpath='{.data.admin-password}' | base64 -d

  port-forward-webui:
    desc: "Port forward web UI to localhost"
    cmds:
      - kubectl -n kluctl-system port-forward svc/kluctl-webui 8080

  deploy-production-cluster:
    desc: "Deploy kluctl gitops production target with git and docker credentials"
    vars:
      GITHUB_USERNAME: '{{.GITHUB_USERNAME | default ""}}'
      GITHUB_PAT: '{{.GITHUB_PAT | default ""}}'
      DOCKER_USERNAME: '{{.DOCKER_USERNAME | default ""}}'
      DOCKER_PASSWORD: '{{.DOCKER_PASSWORD | default ""}}'
      DOCKER_EMAIL: '{{.DOCKER_EMAIL | default ""}}'
    cmds:
      - |
        if [ -z "{{.GITHUB_USERNAME}}" ]; then
          echo "Error: GITHUB_USERNAME is required"
          echo "Usage: task deploy-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.GITHUB_PAT}}" ]; then
          echo "Error: GITHUB_PAT is required"
          echo "Usage: task deploy-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_USERNAME}}" ]; then
          echo "Error: DOCKER_USERNAME is required for private image access"
          echo "Usage: task deploy-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_PASSWORD}}" ]; then
          echo "Error: DOCKER_PASSWORD is required for private image access"
          echo "Usage: task deploy-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_EMAIL}}" ]; then
          echo "Error: DOCKER_EMAIL is required for private image access"
          echo "Usage: task deploy-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        echo "Deploying production cluster with GitHub and Docker credentials..."
        echo "Using GitHub username: {{.GITHUB_USERNAME}}"
        echo "Using Docker username: {{.DOCKER_USERNAME}}"
        kluctl helm-pull
        kluctl deploy -t production --yes -a environment=production -a environmentType=prod -a github_username="{{.GITHUB_USERNAME}}" -a github_pat="{{.GITHUB_PAT}}" -a docker_username="{{.DOCKER_USERNAME}}" -a docker_password="{{.DOCKER_PASSWORD}}" -a docker_email="{{.DOCKER_EMAIL}}"

  render-production-cluster:
    desc: "Render kluctl gitops production target for validation"
    vars:
      GITHUB_USERNAME: '{{.GITHUB_USERNAME | default ""}}'
      GITHUB_PAT: '{{.GITHUB_PAT | default ""}}'
      DOCKER_USERNAME: '{{.DOCKER_USERNAME | default ""}}'
      DOCKER_PASSWORD: '{{.DOCKER_PASSWORD | default ""}}'
      DOCKER_EMAIL: '{{.DOCKER_EMAIL | default ""}}'
    cmds:
      - |
        if [ -z "{{.GITHUB_USERNAME}}" ]; then
          echo "Error: GITHUB_USERNAME is required"
          echo "Usage: task render-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.GITHUB_PAT}}" ]; then
          echo "Error: GITHUB_PAT is required"
          echo "Usage: task render-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_USERNAME}}" ]; then
          echo "Error: DOCKER_USERNAME is required for private image access"
          echo "Usage: task render-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_PASSWORD}}" ]; then
          echo "Error: DOCKER_PASSWORD is required for private image access"
          echo "Usage: task render-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        if [ -z "{{.DOCKER_EMAIL}}" ]; then
          echo "Error: DOCKER_EMAIL is required for private image access"
          echo "Usage: task render-production-cluster GITHUB_USERNAME=\$GITHUB_USERNAME GITHUB_PAT=\$GITHUB_PAT DOCKER_USERNAME=\$DOCKER_USERNAME DOCKER_PASSWORD=\$DOCKER_PASSWORD DOCKER_EMAIL=\$DOCKER_EMAIL"
          exit 1
        fi
        echo "Rendering production cluster with GitHub and Docker credentials..."
        echo "Using GitHub username: {{.GITHUB_USERNAME}}"
        echo "Using Docker username: {{.DOCKER_USERNAME}}"
        kluctl render -t production -a environment=production -a environmentType=prod -a github_username="{{.GITHUB_USERNAME}}" -a github_pat="{{.GITHUB_PAT}}" -a docker_username="{{.DOCKER_USERNAME}}" -a docker_password="{{.DOCKER_PASSWORD}}" -a docker_email="{{.DOCKER_EMAIL}}"

  get-cluster-status:
    desc: "Get status of all clusters"
    cmds:
      - kubectl get kluctldeployments -A
      - kubectl get pods -n kluctl-system

  get-git-credentials:
    desc: "Get the stored GitHub credentials from the secret"
    cmds:
      - echo "GitHub Username:"
      - kubectl -n kluctl-gitops get secret git-credentials -o jsonpath='{.data.username}' | base64 -d
      - echo ""
      - echo "GitHub PAT (first 10 chars):"
      - kubectl -n kluctl-gitops get secret git-credentials -o jsonpath='{.data.password}' | base64 -d | cut -c1-10
      - echo "..."